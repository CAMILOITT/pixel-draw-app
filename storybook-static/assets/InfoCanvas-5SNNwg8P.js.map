{"version":3,"file":"InfoCanvas-5SNNwg8P.js","sources":["../../src/context/state/infoCanvas/context.ts","../../src/context/state/infoCanvas/InfoCanvas.tsx"],"sourcesContent":["import { CanvasProvider, ConfigCanvas } from '../../../types/canvas/interface'\nimport { DrawingDimensiones } from '../../../types/drawing/interface'\n\nexport const initValueCanvas: ConfigCanvas = { w: 500, h: 500, bg: null }\nexport const initValueSizePixel: DrawingDimensiones = { w: 10, h: 10 }\n\nexport const initValueUrl = ''\nexport const initValueCanvasContext = null\n\nexport const Context: CanvasProvider = {\n  infoCanvas: initValueCanvas,\n  setInfoCanvas: value => value,\n  sizePixel: initValueSizePixel,\n  setSizePixel: value => value,\n  urlImage: initValueUrl,\n  setUrlImage: value => value,\n  contextCanvasDrawing: initValueCanvasContext,\n  setContextCanvasDrawing: value => value,\n}\n","import { createContext, useState } from 'react'\nimport { ConfigCanvas } from '../../../types/canvas/interface'\nimport {\n  Context,\n  initValueCanvas,\n  initValueCanvasContext,\n  initValueSizePixel,\n  initValueUrl,\n} from './context'\nimport { CanvasContext } from '../../../types/drawing/interface'\n\nexport const InfoCanvasContext = createContext(Context)\n\ninterface InfoCanvasProviderProps {\n  children: React.ReactNode\n}\n\nexport function InfoCanvasProvider({ children }: InfoCanvasProviderProps) {\n  const [infoCanvas, setInfoCanvas] = useState<ConfigCanvas>(initValueCanvas)\n  const [sizePixel, setSizePixel] = useState(initValueSizePixel)\n\n  const [urlImage, setUrlImage] = useState(initValueUrl)\n\n  const [contextCanvasDrawing, setContextCanvasDrawing] =\n    useState<CanvasContext | null>(initValueCanvasContext)\n\n  const data = {\n    infoCanvas,\n    setInfoCanvas,\n    sizePixel,\n    setSizePixel,\n    urlImage,\n    setUrlImage,\n    contextCanvasDrawing,\n    setContextCanvasDrawing,\n  }\n\n  return (\n    <InfoCanvasContext.Provider value={data}>\n      {children}\n    </InfoCanvasContext.Provider>\n  )\n}\n"],"names":["cov_114bxazgcw","actualCoverage","initValueCanvas","s","w","h","bg","initValueSizePixel","initValueCanvasContext","Context","infoCanvas","setInfoCanvas","value","sizePixel","setSizePixel","cov_2h3hcm58co","path","hash","global","gcv","coverageData","coverage","InfoCanvasContext","createContext","InfoCanvasProvider","children","f","useState","urlImage","setUrlImage","initValueUrl","contextCanvasDrawing","setContextCanvasDrawing","data"],"mappings":"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"}